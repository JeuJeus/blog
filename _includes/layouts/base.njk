<!doctype html>
<html lang="{{ metadata.language }}">
	<head>
		<meta charset="utf-8">
		<meta name="viewport" content="width=device-width, initial-scale=1.0">
		<title>{{ title or metadata.title }}</title>
		<meta name="description" content="{{ description or metadata.description }}">

		<link rel="icon" type="image/x-icon" href="/img/favicon.ico">

		{#- Atom and JSON feeds included by default #}
		<link rel="alternate" href="/feed/feed.xml" type="application/atom+xml" title="{{ metadata.title }}">
		<link rel="alternate" href="/feed/feed.json" type="application/json" title="{{ metadata.title }}">

		{#- Uncomment this if youâ€™d like folks to know that you used Eleventy to build your site!  #}
		{#- <meta name="generator" content="{{ eleventy.generator }}"> #}

		{#-
		CSS bundles are provided via the `eleventy-plugin-bundle` plugin:
		1. You can add to them using `{% css %}`
		2. You can get from them using `{% getBundle "css" %}` or `{% getBundleFileUrl "css" %}`
		3. You can do the same for JS: {% js %}{% endjs %} and <script>{% getBundle "js" %}</script>
		4. Learn more: https://github.com/11ty/eleventy-plugin-bundle
		#}

		{#- Add an arbitrary string to the bundle #}
		{%- css %}* { box-sizing: border-box; }{% endcss %}
		{#- Add the contents of a file to the bundle #}
		{%- css %}{% include "public/css/index.css" %}{% endcss %}
		{#- Or add from node_modules #}
		{# {%- css %}{% include "node_modules/prism-themes/themes/prism-one-dark.css" %}{% endcss %} #}

		{#- Render the CSS bundle using Inlined CSS (for the fastest site performance in production) #}
		<style>{% getBundle "css" %}</style>
		{#- Renders the CSS bundle using a separate file, if you can't set CSP directive style-src: 'unsafe-inline' #}
		{#- <link rel="stylesheet" href="{% getBundleFileUrl "css" %}"> #}

        {#- PWA #}
        <link rel="manifest" href="/manifest.json">
		<script>
           const serviceWorkerStateChange = newWorker => {
               if (newWorker.state !== "installed") return;
               if (navigator.serviceWorker.controller) window.location.reload();
           };

           const handleServiceWorkerRegistrationUpdate = registration => {
               const newWorker = registration.installing;
               if(!newWorker) return;
               newWorker.addEventListener("statechange", newWorker => serviceWorkerStateChange(newWorker));
           };

           const handleServiceWorkerRegistration = registration => {
               registration.addEventListener("updatefound", registration => handleServiceWorkerRegistrationUpdate(registration));
           };

           if ("serviceWorker" in navigator) {
               navigator.serviceWorker
                   .register("/service-worker.js")
                   .then((registration) => handleServiceWorkerRegistration(registration))
                   .catch((error) => console.error("Service Worker registration failed:", error));
           }
        </script>
	</head>
	<body>
		<a href="#skip" class="visually-hidden">Skip to main content</a>

		<header>
			<a href="/" class="home-link"><img class="jeujeus-logo" src="/img/logo.webp" height="50" alt="JeuJeus Logo" /></a>

			{#- Read more about `eleventy-navigation` at https://www.11ty.dev/docs/plugins/navigation/ #}
			<nav>
				<h2 class="visually-hidden">Top level navigation menu</h2>
				<ul class="nav">
				{%- for entry in collections.all | eleventyNavigation %}
				    {% if entry.key != "Imprint" %}
					    <li class="nav-item"><a href="{{ entry.url }}"{% if entry.url == page.url %} aria-current="page"{% endif %}>{{ entry.title }}</a></li>
					{% endif %}
				{%- endfor %}
				</ul>
			</nav>
		</header>

		<main id="skip">
			{{ content | safe }}
		</main>

		<footer>
		    <a href="https://jeujeus.de" target="_blank">JeuJeus</a>

            {%- for entry in collections.all | eleventyNavigation %}
                {% if entry.key == "Imprint" or entry.key == "About Me" %}
                    <li class="nav-item"><a href="{{ entry.url }}"{% if entry.url == page.url %} aria-current="page"{% endif %}>{{ entry.title }}</a></li>
                {% endif %}
            {%- endfor %}
            </ul>
		</footer>
	</body>
</html>
